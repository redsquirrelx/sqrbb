# Este playbook recibe un .json como input con
# una lista de la info. de los microservicios que
# se van a actualizar.
# Su estructura es la siguiente:
# {
#   "microservicios": [
#     {
#       "name": "servicioA",
#       "root": "directorio servicioA",
#     },
#     {
#       "name": "servicioB",
#       "root": "directorio servicioB",
#     },
#     {
#       "name": "servicioC",
#       "root": "directorio servicioC",
#     },
#   ]
# }
#

- name: Desplegar microservicios
  hosts: localhost
  connection: local
  gather_facts: false
  vars:
    project_root: "{{ playbook_dir }}/.."
    account_id: "{{ lookup('pipe', 'terraform -chdir=../infra/ output -raw aws-account-id') }}"
    cluster_name: "{{ lookup('pipe', 'terraform -chdir=../infra/ output -raw cluster-main-name') }}"
    repo_region: "us-east-2"

  tasks:
    - name: Autenticar cliente de docker
      shell: >
        aws ecr get-login-password 
        --region us-east-2 |
        docker login 
        --username AWS 
        --password-stdin {{account_id}}.dkr.ecr.{{ repo_region }}.amazonaws.com
    
    - name: Construir imagenes
      loop: "{{ microservicios }}"
      loop_control:
        loop_var: msrvc
      ansible.builtin.command: >
        docker build -t msrvc/{{ msrvc.name }} {{ project_root }}/{{ msrvc.root }}
      
    - name: Etiquetar imagenes
      loop: "{{ microservicios }}"
      loop_control:
        loop_var: msrvc
      ansible.builtin.command: >
        docker tag msrvc/{{ msrvc.name }}:latest
        {{ account_id }}.dkr.ecr.{{ repo_region }}.amazonaws.com/msrvc/{{ msrvc.name }}:latest

    - name: Publicar imagenes
      loop: "{{ microservicios }}"
      loop_control:
        loop_var: msrvc
      ansible.builtin.command: >
        docker push {{account_id}}.dkr.ecr.{{ repo_region }}.amazonaws.com/msrvc/{{ msrvc.name }}:latest

    - name: Actualizar servicios
      loop: "{{ microservicios }}"
      loop_control:
        loop_var: msrvc
      ansible.builtin.command: >
        aws ecs update-service
        --cluster {{ cluster_name }}
        --service {{ msrvc.name }}-srvc
        --force-new-deployment
        --region {{ repo_region }}
